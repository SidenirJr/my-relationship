version: '3.8'

services:
  # Serviço do frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Serviço do backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - mysql
      - redis
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=mysql://user:password@mysql:3306/sideludi
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=seu_jwt_secret_seguro
      - SESSION_SECRET=seu_session_secret_seguro
      - JWT_EXPIRES_IN=1d
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./backend/uploads:/app/uploads

  # Serviço do MySQL
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=sideludi
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Serviço do Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data: